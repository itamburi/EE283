getwd()
mytab = read_tsv("../datalinks/RNAseq/RNAseq384_SampleCoding.txt/RNAseq384_SampleCoding.txt")
library(tidyverse)
mytab = read_tsv("../datalinks/RNAseq/RNAseq384_SampleCoding.txt/RNAseq384_SampleCoding.txt")
mytab = read_tsv("/data/class/ecoevo283/public/Bioinformatics_Course/RNAseq/RNAseq384_SampleCoding.txt")
mytab = read_tsv("data/class/ecoevo283/public/Bioinformatics_Course/RNAseq/RNAseq384_SampleCoding.txt")
getwd()
mytab = read_tsv("../datalinks/RNAseq/RNAseq384_SampleCoding.txt")
View(mytab)
mytab2 <- mytab %>%
select(RILcode, TissueCode, Replicate, FullSampleName)
table(mytab2$RILcode)
table(mytab2$TissueCode)
table(mytab2$Replicate)
mytab2 <- mytab %>%
select(RILcode, TissueCode, Replicate, FullSampleName) %>%
filter(RILcode %in% c(21148, 21286, 22162, 21297, 21029, 22052, 22031, 21293, 22378, 22390)) %>%
filter(TissueCode %in% c("B", "E")) %>%
filter(Replicate == "0")
View(mytab2)
View(mytab2)
cat("Z")
i=1
cat("RNAseq/bam/",mytab2$FullSampleName[i],".bam\n",file="shortRNAseq.names.txt",append=TRUE,sep='')
for(i in 1:nrow(mytab2)){
cat("/dfs6/pub/itamburi/ee283/week3/prob5/RNAbam/",mytab2$FullSampleName[i],".bam\n",file="shortRNAseq.names.txt",append=TRUE,sep='')
}
write_tsv(mytab2,"shortRNAseq.txt")
library(tidyverse)
getwd()
mytab = read_tsv("../datalinks/RNAseq/RNAseq384_SampleCoding.txt")
mytab
mytab2 <- mytab %>%
select(RILcode, TissueCode, Replicate, FullSampleName)
table(mytab2$RILcode)
table(mytab2$TissueCode)
table(mytab2$Replicate)
mytab2 <- mytab %>%
select(RILcode, TissueCode, Replicate, FullSampleName) %>%
filter(RILcode %in% c(21148, 21286, 22162, 21297, 21029, 22052, 22031, 21293, 22378, 22390)) %>%
filter(TissueCode %in% c("B", "E")) %>%
filter(Replicate == "0")
for(i in 1:nrow(mytab2)){
cat("dfs6/pub/itamburi/ee283/week3/prob5/RNAbam/",mytab2$FullSampleName[i],".bam\n",file="shortRNAseq.names.txt",append=TRUE,sep='')
}
write_tsv(mytab2,"shortRNAseq.txt")
for(i in 1:nrow(mytab2)){
cat("/dfs6/pub/itamburi/ee283/week3/prob5/RNAbam/",mytab2$FullSampleName[i],".bam\n",file="shortRNAseq.names.txt",append=TRUE,sep='')
}
write_tsv(mytab2,"shortRNAseq.txt")
for(i in 1:nrow(mytab2)){
cat("/dfs6/pub/itamburi/ee283/week3/prob5/RNAbam/",mytab2$FullSampleName[i],".sort.bam\n",file="shortRNAseq.names.txt",append=TRUE,sep='')
}
write_tsv(mytab2,"shortRNAseq.txt")
for(i in 1:nrow(mytab2)){
cat("/dfs6/pub/itamburi/ee283/week3/prob5/RNAbam/",mytab2$FullSampleName[i],".sort.bam\n",file="shortRNAseq.names.txt",append=TRUE,sep='')
}
write_tsv(mytab2,"shortRNAseq.txt")
for(i in 1:nrow(mytab2)){
cat("/dfs6/pub/itamburi/ee283/week3/prob5/RNAbam/",mytab2$FullSampleName[i],".sort.bam\n",file="shortRNAseq.names.txt",append=TRUE,sep='')
}
write_tsv(mytab2,"shortRNAseq.txt")
library(DESeq2)
getwd()
mytab = read_tsv("../datalinks/RNAseq/RNAseq384_SampleCoding.txt")
library(tidyverse)
getwd()
mytab = read_tsv("../datalinks/RNAseq/RNAseq384_SampleCoding.txt")
View(mytab)
mytab2 <- mytab %>%
select(RILcode, TissueCode, Replicate, FullSampleName)
View(mytab2)
table(mytab2$RILcode)
table(mytab2$TissueCode)
table(mytab2$Replicate)
mytab2 <- mytab %>%
select(RILcode, TissueCode, Replicate, FullSampleName) %>%
filter(RILcode %in% c(21148, 21286, 22162, 21297, 21029, 22052, 22031, 21293, 22378, 22390)) %>%
filter(TissueCode %in% c("B", "E")) %>%
filter(Replicate == "0")
View(mytab2)
getwd()
sampleInfo = read.table("shortRNAseq.txt")
sampleInfo$FullSampleName = as.character(sampleInfo$FullSampleName)
sampleInfo = read.table("shortRNAseq.txt")
View(sampleInfo)
sampleInfo = read.txt("shortRNAseq.txt")
sampleInfo = read.delim("shortRNAseq.txt")
sampleInfo$FullSampleName = as.character(sampleInfo$FullSampleName)
View(sampleInfo)
## I am assuming feature counts finished
countdata = read.table("fly_counts.txt", header=TRUE, row.names=1)
View(countdata)
# Remove first five columns (chr, start, end, strand, length)
# or do it the tidy way
countdata = countdata[ ,6:ncol(countdata)]
temp = colnames(countdata)
names(countdata)
temp = gsub("X.dfs6.pub.itamburi.ee283.week3.prob5.RNAbam.","",temp)
temp = gsub(".sort.bam","",temp)
colnames(countdata) = temp
names(countdata)
cbind(temp,sampleInfo$FullSampleName,temp == sampleInfo$FullSampleName)
# create DEseq2 object & run DEseq
dds = DESeqDataSetFromMatrix(countData=countdata, colData=sampleInfo, design=~TissueCode)
dds <- DESeq(dds)
res <- results( dds )
res
plotMA( res, ylim = c(-1, 1) )
plotDispEsts( dds )
hist( res$pvalue, breaks=20, col="grey" )
hist(res$baseMean, breaks=50, main="Distribution of baseMean", xlab="baseMean")
# Log-scale visualization
hist(log10(res$baseMean + 1), breaks=50, main="Log10-transformed baseMean Distribution", xlab="log10(baseMean + 1)")
###  add external annotation to "gene ids"
# log transform
rld = rlog( dds )
## this is where you could just extract the log transformed normalized data for each sample ID, and then roll your own analysis
head( assay(rld) )
mydata = assay(rld)
sampleDists = dist( t( assay(rld) ) )
# heat map
sampleDistMatrix = as.matrix( sampleDists )
rownames(sampleDistMatrix) = rld$TissueCode
colnames(sampleDistMatrix) = NULL
library( "gplots" )
library( "RColorBrewer" )
colours = colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
heatmap.2( sampleDistMatrix, trace="none", col=colours)
# PCs
# wow you can sure tell tissue apart
print( plotPCA( rld, intgroup = "TissueCode") )
# heat map with gene clustering
library( "genefilter" )
# these are the top genes (that tell tissue apart no doubt)
topVarGenes <- head( order( rowVars( assay(rld) ), decreasing=TRUE ), 35 )
heatmap.2( assay(rld)[ topVarGenes, ], scale="row", trace="none", dendrogram="column", col = colorRampPalette( rev(brewer.pal(9, "RdBu")) )(255))
lfc = data.frame(res)
View(lfc)
lfc = data.frame(res) %>%
filter(!is.na(log2FoldChange))
library(cowplot)
lfc = data.frame(res) %>%
column_to_rownames(var = "gene.id") %>%
filter(!is.na(log2FoldChange)) %>%
mutate(sig.label = ifelse(padj <=0.05, gene.id, NA))
lfc = data.frame(res) %>%
rownames_to_column(var = "gene.id") %>%
filter(!is.na(log2FoldChange)) %>%
mutate(sig.label = ifelse(padj <=0.05, gene.id, NA))
ggplot(lfc, aes(log2FoldChange, -log10(pvalue))) +
facet_wrap(~tissue, ncol = 2, scales = "free") +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC( HFHS/NC )", title = "DESeq HFHS over Chow") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
ggplot(lfc, aes(log2FoldChange, -log10(pvalue))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC( HFHS/NC )", title = "DESeq HFHS over Chow") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC( HFHS/NC )", title = "DESeq HFHS over Chow") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
TissueCode
View(sampleInfo)
View(dds)
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC", title = "Fly Brain vs Embryo Deseq2") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
# geom_point(size = .2,
#            data = subset(lfc, is.na(sig.label) == FALSE),
#            color = "black"
# ) +
labs( x="Log2FC", title = "Fly Brain vs Embryo Deseq2") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
summar(res)
summary(res)
res <- results( dds, contrast = c("tissue","B","E") )
res <- results( dds, contrast = c("TissueCode","B","E") )
summary(res)
res <- results( dds, contrast = c("TissueCode","E","B") )
summary(res)
res <- results( dds, contrast = c("TissueCode","B","E") )
summary(res)
lfc = data.frame(res) %>%
rownames_to_column(var = "gene.id") %>%
filter(!is.na(log2FoldChange)) %>%
mutate(sig.label = ifelse(padj <=0.05, gene.id, NA))
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC(brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
# ggrepel::geom_text_repel( aes( label = sig.label ),
#                           vjust = 1.0,
#                           box.padding = 0.5,
#                           size = 2.0,
#                           max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == TRUE),
color = "black"
) +
labs( x="Log2FC(brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
# ggrepel::geom_text_repel( aes( label = sig.label ),
#                           vjust = 1.0,
#                           box.padding = 0.5,
#                           size = 2.0,
#                           max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
lfc = data.frame(res) %>%
rownames_to_column(var = "gene.id") %>%
filter(!is.na(log2FoldChange)) %>%
mutate(sig.label = ifelse(padj <=0.01, gene.id, NA))
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.01), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == TRUE),
color = "black"
) +
labs( x="Log2FC(brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
# ggrepel::geom_text_repel( aes( label = sig.label ),
#                           vjust = 1.0,
#                           box.padding = 0.5,
#                           size = 2.0,
#                           max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.01), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == TRUE),
color = "black"
) +
labs( x="Log2FC(brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.01), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC(brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.01), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC(Brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
ggsave("DEx Brain vs Embryo deseq2.pdf",h=8,w=10)
