# estimate the library size for normalization
library(ChIPpeakAnno)
library(ATACseqQC)
library(Rsamtools)
library(cowplot)
library(ggplot2)
setwd("/Users/ian/Library/Application Support/CRSP Desktop/Volumes.noindex/pub.localized/ee283/week6")
# QCing 6 files
bamfiles = list.files("bam.processed")
bamfiles = subset(bamfiles, grepl(".chrX.dd.bam$",bamfiles))
bampaths = file.path("bam.processed", bamfiles)
bf=bamfiles[1] # debug
# estimate lib size
file = paste0("bam.processed/",bf)
librarySize = estLibSize(file)
# Only consider X chromosome for expediency
# check chrom annotations for TSS and bamfile
seqlevels(BamFile(file))
# Only consider X chromosome for expediency
# check chrom annotations for TSS and bamfile
head(seqlevels(BamFile(file)))
head(seqlevels(TSS))
seqlevels(TSS)
library(TxDb.Dmelanogaster.UCSC.dm6.ensGene)
txs = transcripts(TxDb.Dmelanogaster.UCSC.dm6.ensGene)
TSS = promoters(txs, upstream=0, downstream=1)
TSS = unique(TSS)
head(seqlevels(TSS))
seqlevels(TSS) <- sub("^chr", "", seqlevels(TSS))
head(seqlevels(TSS))
# Only consider X chromosome for expediency
# check chrom annotations for TSS and bamfile
head(seqlevels(BamFile(file)))
seqlev = "X"
# seqlev = c("chrX","chr2L","chr2R","chr3L","chr3R")
NTILE = 101
dws = ups = 1010
# make paths to qc files for enrichedFragments()
dir=paste0("qcfiles/", gsub(".chrX.dd.bam","",bf))
qcfiles = file.path(dir,c("NucleosomeFree.bam","mononucleosome.bam","dinucleosome.bam","trinucleosome.bam"))
sigs = enrichedFragments(qcfiles, TSS=TSS, librarySize=librarySize, seqlev=seqlev,
TSS.filter=0.5, n.tile = NTILE, upstream = ups, downstream = dws)
View(sigs)
names(sigs) <- gsub(".bam", "", basename(names(sigs)))
sigs.log2 <- lapply(sigs, function(.ele) log2(.ele+1))
z=sigs.log2$NucleosomeFree
View(sigs.log2)
View(z)
featureAlignedHeatmap(sigs.log2, reCenterPeaks(TSS, width=ups+dws), zeroAt=.5, n.tile=NTILE)
#plot heatmap
pdf(paste0("qcplots/FeatureAlignedHeatmap_", bf))
dev.off()
#plot heatmap
pdf(paste0("qcplots/FeatureAlignedHeatmap_", bf,".pdf"))
featureAlignedHeatmap(sigs.log2, reCenterPeaks(TSS, width=ups+dws), zeroAt=.5, n.tile=NTILE)
dev.off()
makeqcheatmap = function(bf){
#bf=bamfiles[1] # debug
bf=bamfiles
# estimate lib size
file = paste0("bam.processed/",bf)
librarySize = estLibSize(file)
# Only consider X chromosome for expediency
# check chrom annotations for TSS and bamfile
head(seqlevels(BamFile(file)))
head(seqlevels(TSS))
seqlevels(TSS) <- sub("^chr", "", seqlevels(TSS))
head(seqlevels(TSS))
seqlev = "X"
# seqlev = c("chrX","chr2L","chr2R","chr3L","chr3R")
NTILE = 101
dws = ups = 1010
# make paths to qc files for enrichedFragments()
dir=paste0("qcfiles/", gsub(".chrX.dd.bam","",bf))
qcfiles = file.path(dir,c("NucleosomeFree.bam","mononucleosome.bam","dinucleosome.bam","trinucleosome.bam"))
sigs = enrichedFragments(qcfiles, TSS=TSS, librarySize=librarySize, seqlev=seqlev,
TSS.filter=0.5, n.tile = NTILE, upstream = ups, downstream = dws)
names(sigs) <- gsub(".bam", "", basename(names(sigs)))
sigs.log2 <- lapply(sigs, function(.ele) log2(.ele+1))
#plot heatmap
pdf(paste0("qcplots/FeatureAlignedHeatmap_", bf,".pdf"))
featureAlignedHeatmap(sigs.log2, reCenterPeaks(TSS, width=ups+dws), zeroAt=.5, n.tile=NTILE)
dev.off()
}
lapply(bamfiles, makeqcheatmap)
bf=bamfiles[2] # debug
bf=bamfiles[2] # debug
# estimate lib size
file = paste0("bam.processed/",bf)
librarySize = estLibSize(file)
# Only consider X chromosome for expediency
# check chrom annotations for TSS and bamfile
head(seqlevels(BamFile(file)))
head(seqlevels(TSS))
seqlevels(TSS) <- sub("^chr", "", seqlevels(TSS))
head(seqlevels(TSS))
seqlev = "X"
# seqlev = c("chrX","chr2L","chr2R","chr3L","chr3R")
NTILE = 101
dws = ups = 1010
# make paths to qc files for enrichedFragments()
dir=paste0("qcfiles/", gsub(".chrX.dd.bam","",bf))
qcfiles = file.path(dir,c("NucleosomeFree.bam","mononucleosome.bam","dinucleosome.bam","trinucleosome.bam"))
sigs = enrichedFragments(qcfiles, TSS=TSS, librarySize=librarySize, seqlev=seqlev,
TSS.filter=0.5, n.tile = NTILE, upstream = ups, downstream = dws)
names(sigs) <- gsub(".bam", "", basename(names(sigs)))
sigs.log2 <- lapply(sigs, function(.ele) log2(.ele+1))
#plot heatmap
pdf(paste0("qcplots/FeatureAlignedHeatmap_", bf,".pdf"))
featureAlignedHeatmap(sigs.log2, reCenterPeaks(TSS, width=ups+dws), zeroAt=.5, n.tile=NTILE)
dev.off()
bamfiles
# estimate lib size
file = paste0("bam.processed/",bf)
makeqcheatmap = function(bf){
#bf=bamfiles[2] # debug
# estimate lib size
file = paste0("bam.processed/",bf)
librarySize = estLibSize(file)
# Only consider X chromosome for expediency
# check chrom annotations for TSS and bamfile
head(seqlevels(BamFile(file)))
head(seqlevels(TSS))
seqlevels(TSS) <- sub("^chr", "", seqlevels(TSS))
head(seqlevels(TSS))
seqlev = "X"
# seqlev = c("chrX","chr2L","chr2R","chr3L","chr3R")
NTILE = 101
dws = ups = 1010
# make paths to qc files for enrichedFragments()
dir=paste0("qcfiles/", gsub(".chrX.dd.bam","",bf))
qcfiles = file.path(dir,c("NucleosomeFree.bam","mononucleosome.bam","dinucleosome.bam","trinucleosome.bam"))
sigs = enrichedFragments(qcfiles, TSS=TSS, librarySize=librarySize, seqlev=seqlev,
TSS.filter=0.5, n.tile = NTILE, upstream = ups, downstream = dws)
names(sigs) <- gsub(".bam", "", basename(names(sigs)))
sigs.log2 <- lapply(sigs, function(.ele) log2(.ele+1))
#plot heatmap
pdf(paste0("qcplots/FeatureAlignedHeatmap_", bf,".pdf"))
featureAlignedHeatmap(sigs.log2, reCenterPeaks(TSS, width=ups+dws), zeroAt=.5, n.tile=NTILE)
dev.off()
}
lapply(bamfiles, makeqcheatmap)
