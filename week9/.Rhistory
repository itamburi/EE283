labs(
title = "Comparison of SNP Model Results",
subtitle = "SNPs with > 50% difference in -log10pval are labeled",
x= "-log10 of pvalues from Model 1 ",   y= "-log10 of pvalues from Model 2 "
) +
geom_point(size = .2, alpha = .4, color = "black") +
geom_point(size = 1,
data = subset(merge, is.na(label) == FALSE),
color = "red"
) +
ggrepel::geom_text_repel( aes( label = label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
merge = read.csv("../week8/interaction of treatment to founder at each genome position by two models (neg.log10p).csv") %>%
mutate(
SNP = paste0(chr,"_",pos),
CHR = chr,
BP = pos,
label = ifelse( abs( (mod1.signif-mod2.signif)/mod1.signif)*100 > 30 , SNP,NA)
)
ggplot(merge, aes( mod1.signif , mod2.signif) ) +
labs(
title = "Comparison of SNP Model Results",
subtitle = "SNPs with > 50% difference in -log10pval are labeled",
x= "-log10 of pvalues from Model 1 ",   y= "-log10 of pvalues from Model 2 "
) +
geom_point(size = .2, alpha = .4, color = "black") +
geom_point(size = 1,
data = subset(merge, is.na(label) == FALSE),
color = "red"
) +
ggrepel::geom_text_repel( aes( label = label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
merge = read.csv("../week8/interaction of treatment to founder at each genome position by two models (neg.log10p).csv") %>%
mutate(
SNP = paste0(chr,"_",pos),
CHR = chr,
BP = pos,
label = ifelse( abs( (mod1.signif-mod2.signif)/mod1.signif)*100 > 20 , SNP,NA)
)
ggplot(merge, aes( mod1.signif , mod2.signif) ) +
labs(
title = "Comparison of SNP Model Results",
subtitle = "SNPs with > 50% difference in -log10pval are labeled",
x= "-log10 of pvalues from Model 1 ",   y= "-log10 of pvalues from Model 2 "
) +
geom_point(size = .2, alpha = .4, color = "black") +
geom_point(size = 1,
data = subset(merge, is.na(label) == FALSE),
color = "red"
) +
ggrepel::geom_text_repel( aes( label = label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
merge = read.csv("../week8/interaction of treatment to founder at each genome position by two models (neg.log10p).csv") %>%
mutate(
SNP = paste0(chr,"_",pos),
CHR = chr,
BP = pos,
label = ifelse( abs( mod1.signif - mod2.signif ) > 1 , SNP,NA)
)
merge = read.csv("../week8/interaction of treatment to founder at each genome position by two models (neg.log10p).csv") %>%
mutate(
SNP = paste0(chr,"_",pos),
CHR = chr,
BP = pos,
label = ifelse( abs( mod1.signif - mod2.signif ) > 1 , SNP,NA)
)
merge = read.csv("../week8/interaction of treatment to founder at each genome position by two models (neg.log10p).csv") %>%
mutate(
SNP = paste0(chr,"_",pos),
CHR = chr,
BP = pos,
label = ifelse( abs( mod1.signif - mod2.signif ) > .5 , SNP,NA)
)
merge = read.csv("../week8/interaction of treatment to founder at each genome position by two models (neg.log10p).csv") %>%
mutate(
SNP = paste0(chr,"_",pos),
CHR = chr,
BP = pos,
label = ifelse( abs( log10(mod1.signif)-log10(mod2.signif)/mod1.signif)*100 > 40 , SNP,NA)
)
ggplot(merge, aes( mod1.signif , mod2.signif) ) +
labs(
title = "Comparison of SNP Model Results",
subtitle = "SNPs with > 50% difference in -log10pval are labeled",
x= "-log10 of pvalues from Model 1 ",   y= "-log10 of pvalues from Model 2 "
) +
geom_point(size = .2, alpha = .4, color = "black") +
geom_point(size = 1,
data = subset(merge, is.na(label) == FALSE),
color = "red"
) +
ggrepel::geom_text_repel( aes( label = label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 100, alpha = 0.7 ) +
theme_bw()
ggplot(merge, aes( mod1.signif , mod2.signif) ) +
labs(
title = "Comparison of SNP Model Results",
subtitle = "SNPs with > 50% difference in -log10pval are labeled red",
x= "-log10 of pvalues from Model 1 ",   y= "-log10 of pvalues from Model 2 "
) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(size = .2, alpha = .4, color = "black") +
geom_point(size = 1,
data = subset(merge, is.na(label) == FALSE),
color = "red"
) +
ggrepel::geom_text_repel( aes( label = label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 100, alpha = 0.7 ) +
theme_bw()
ggplot(merge, aes( mod1.signif , mod2.signif) ) +
labs(
title = "Comparison of SNP Model Results",
subtitle = "SNPs with > 50% difference in -log10pval are labeled red",
x= "-log10 of pvalues from Model 1 ",   y= "-log10 of pvalues from Model 2 "
) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(size = .2, alpha = .4, color = "black") +
geom_point(size = .2,
data = subset(merge, is.na(label) == FALSE),
color = "red"
) +
ggrepel::geom_text_repel( aes( label = label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 100, alpha = 0.7 ) +
theme_bw()
# mod1
res1 = read.csv("../week8/interaction of treatment to founder at each genome position by two models (neg.log10p).csv") %>%
mutate(
SNP = paste0(chr,"_",pos),
CHR = chr,
BP = pos,
P = mod1.signif # notice model 1
) %>%
select(CHR, BP, SNP, P)
chrs = res1 %>%
distinct(CHR) %>%
mutate(
CHR_num = case_when(
CHR =="chrX" ~ 1,
CHR =="chr2L" ~ 2,
CHR =="chr2R" ~ 3,
CHR =="chr3L" ~ 4,
CHR =="chr3R" ~ 5
)
)
res1_num = res1 %>%
left_join(.,chrs) %>%
select(-CHR) %>%
rename(
CHR = "CHR_num"
)
p1 = function(){
manhattan(res1_num, main = "Significant SNPs from Model1",
ylim = c(0, 10), cex = 0.6, cex.axis = 0.9,
col = c("blue4", "orange3"),
suggestiveline = -log10(1e-05),
genomewideline = -log10(5e-08),
logp=TRUE,
chrlabs = chrs$CHR)
}
# mod 2
res2 = read.csv("../week8/interaction of treatment to founder at each genome position by two models (neg.log10p).csv") %>%
mutate(
SNP = paste0(chr,"_",pos),
CHR = chr,
BP = pos,
P = mod2.signif # notice model 2
) %>%
select(CHR, BP, SNP, P)
chrs = res2 %>%
distinct(CHR) %>%
mutate(
CHR_num = case_when(
CHR =="chrX" ~ 1,
CHR =="chr2L" ~ 2,
CHR =="chr2R" ~ 3,
CHR =="chr3L" ~ 4,
CHR =="chr3R" ~ 5
)
)
res2_num = res2 %>%
left_join(.,chrs) %>%
select(-CHR) %>%
rename(
CHR = "CHR_num"
)
p2 = function(){
manhattan(res2_num, main = "Significant SNPs from Model 2",
ylim = c(0, 10), cex = 0.6, cex.axis = 0.9,
col = c("blue4", "orange3"),
suggestiveline = -log10(1e-05),
genomewideline = -log10(5e-08),
logp=TRUE,
chrlabs = chrs$CHR)
}
z = plot_grid(p1, p2, ncol = 1)
print(z)
## Problem 4 - Make Manhattan with myManhattan package ####
source("mymanhattan.R")
gg1 = myManhattan(res1_num, chrom.lab =chrs$CHR, graph.title = "Significant SNPs from Model 1")
gg2 = myManhattan(res2_num, chrom.lab =chrs$CHR, graph.title = "Significant SNPs from Model 2")
plot_grid(gg1, gg2, ncol =1)
MP = plot_grid(gg1, gg2, ncol =1)
SNP = ggplot(merge, aes( mod1.signif , mod2.signif) ) +
labs(
title = "Comparison of SNP Model Results",
subtitle = "SNPs with > 50% difference in -log10pval are labeled red",
x= "-log10 of pvalues from Model 1 ",   y= "-log10 of pvalues from Model 2 "
) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(size = .2, alpha = .4, color = "black") +
geom_point(size = .2,
data = subset(merge, is.na(label) == FALSE),
color = "red"
) +
ggrepel::geom_text_repel( aes( label = label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 100, alpha = 0.7 ) +
theme_bw()
plot_grid(MP, SNP, nrow=1)
plot_grid(MP, SNP, nrow=1, rel_widths = c(2, 1))
ggsave("prob5_finalfigure.pdf", h=6, w=12)
plot_grid(MP, SNP, nrow=1, rel_widths = c(1.7, 1))
ggsave("prob5_finalfigure.pdf", h=6, w=12)
load("../week7/deseq2_objs.Rdata")
# check dispersions and variance
plotMA( res, ylim = c(-1, 1) )
plotDispEsts( dds )
library(DESeq2)
# check dispersions and variance
plotMA( res, ylim = c(-1, 1) )
plotDispEsts( dds )
hist( res$pvalue, breaks=20, col="grey" )
plotDispEsts( dds )
# check dispersions and variance
plotMA( res, ylim = c(-1, 1) )
plotDispEsts( dds )
hist( res$pvalue, breaks=20, col="grey" )
###  add external annotation to "gene ids"
# log transform
rld = rlog( dds )
## this is where you could just extract the log transformed normalized data for each sample ID, and then roll your own analysis
head( assay(rld) )
mydata = assay(rld)
sampleDists = dist( t( assay(rld) ) )
# heat map
sampleDistMatrix = as.matrix( sampleDists )
rownames(sampleDistMatrix) = rld$TissueCode
colnames(sampleDistMatrix) = NULL
library( "gplots" )
library( "RColorBrewer" )
colours = colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
heatmap.2( sampleDistMatrix, trace="none", col=colours)
# PCs
# wow you can sure tell tissue apart
print( plotPCA( rld, intgroup = "TissueCode") )
# heat map with gene clustering
library( "genefilter" )
# these are the top genes (that tell tissue apart no doubt)
topVarGenes <- head( order( rowVars( assay(rld) ), decreasing=TRUE ), 35 )
heatmap.2( assay(rld)[ topVarGenes, ], scale="row", trace="none", dendrogram="column", col = colorRampPalette( rev(brewer.pal(9, "RdBu")) )(255))
# check dispersions and variance
plotMA( res, ylim = c(-1, 1) )
plotDispEsts( dds )
library(gplots)
library(RColorBrewer)
# log transform
rld = rlog( dds )
mydata = assay(rld)
sampleDists = dist( t( assay(rld) ) )
# heat map
sampleDistMatrix = as.matrix( sampleDists )
rownames(sampleDistMatrix) = rld$TissueCode
colnames(sampleDistMatrix) = NULL
colours = colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
heatmap.2( sampleDistMatrix, trace="none", col=colours)
# heat map with gene clustering
library( "genefilter" )
# these are the top genes (that tell tissue apart no doubt)
topVarGenes <- head( order( rowVars( assay(rld) ), decreasing=TRUE ), 35 )
heatmap.2( assay(rld)[ topVarGenes, ], scale="row", trace="none", dendrogram="column", col = colorRampPalette( rev(brewer.pal(9, "RdBu")) )(255))
# check dispersions and variance
plotMA( res, ylim = c(-1, 1) )
plotDispEsts( dds )
# check dispersions and variance
pp1 = function(){ plotMA( res, ylim = c(-1, 1) ) }
pp2 = function(){ plotDispEsts( dds ) }
plot_grid(pp1, pp2)
library(cowplot)
plot_grid(pp1, pp2)
# PCA
pp3 = function(){ print( plotPCA( rld, intgroup = "TissueCode") ) }
plot_grid(pp1, pp2, pp3)
# PCA
pp3 = function(){ plotPCA( rld, intgroup = "TissueCode") }
plot_grid(pp1, pp2, pp3)
plotPCA( rld, intgroup = "TissueCode")
print(plotPCA( rld, intgroup = "TissueCode"))
# PCA
pp3 = function(){ print(plotPCA( rld, intgroup = "TissueCode")) }
plot_grid(pp1, pp2, pp3)
pp3 = function(){ heatmap.2( sampleDistMatrix, trace="none", col=colours) }
plot_grid(pp1, pp2 ,pp3)
# Heatmap of sample distributions
rld = rlog( dds )
mydata = assay(rld)
sampleDists = dist( t( assay(rld) ) )
sampleDistMatrix = as.matrix( sampleDists )
rownames(sampleDistMatrix) = rld$TissueCode
colnames(sampleDistMatrix) = NULL
colours = colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pp3 = function(){ heatmap.2( sampleDistMatrix, trace="none", col=colours) }
plot_grid(pp3)
plot_grid(pp1, pp2 ,pp3, nrow=2)
View(fun)
pp4 = function(){
heatmap.2( assay(rld)[ topVarGenes, ], scale="row", trace="none", dendrogram="column", col = colorRampPalette( rev(brewer.pal(9, "RdBu")) )(255))
}
plot_grid(pp4)
plot_grid(pp1, pp2)
plot_grid(pp3, pp4)
plot_grid(pp3)
plot_grid(pp1, pp2)
title <- ggdraw() + draw_label("Dispersion and Variance in DEx Genes \n (Brain over Embryo)", fontface='bold')
title <- ggdraw() + draw_label("Dispersion and Variance in DEx Genes \n (Brain over Embryo)", fontface='bold')
z = plot_grid(pp1, pp2)
plot_grid(title, z, ncol=1)
plot_grid(title, z, ncol=1, rel_heights = c(.1, 1))
plot_grid(title, z, ncol=1, rel_heights = c(.05, 1))
plot_grid(title, z, ncol=1, rel_heights = c(.01, 1))
z = plot_grid(pp1, pp2, labels=("A","B"))
plot_grid(title, z, ncol=1, rel_heights = c(.01, 1))
title <- ggdraw() + draw_label("Dispersion and Variance in DEx Genes \n (Brain over Embryo)", fontface='bold')
z = plot_grid(pp1, pp2, labels=c("A","B"))
plot_grid(title, z, ncol=1, rel_heights = c(.01, 1))
plot_grid(title, z, ncol=1, rel_heights = c(.01, 1))
title <- ggdraw() + draw_label("\n Dispersion and Variance in DEx Genes \n (Brain over Embryo)", fontface='bold')
z = plot_grid(pp1, pp2, labels=c("A","B"))
plot_grid(title, z, ncol=1, rel_heights = c(.01, 1))
plot_grid(plot_spacer(), title, z, ncol=1, rel_heights = c(.1., .1, 1))
plot_grid( plot_spacer(), title, z, ncol=1, rel_heights = c(.1, .1, 1))
plot_grid( title, z, ncol=1, rel_heights = c(.1, 1))
title <- ggdraw() + draw_label("Sample Clustering and Top Discriminating Genes", fontface='bold')
z = plot_grid(pp3, pp4, labels=c("C","D"))
CD = plot_grid( title, z, ncol=1, rel_heights = c(.1, 1))
CD
# Volcano plot
lfc = data.frame(res) %>%
rownames_to_column(var = "gene.id") %>%
filter(!is.na(log2FoldChange)) %>%
mutate(sig.label = ifelse(padj <=0.01, gene.id, NA))
library(tidyverse)
# Volcano plot
lfc = data.frame(res) %>%
rownames_to_column(var = "gene.id") %>%
filter(!is.na(log2FoldChange)) %>%
mutate(sig.label = ifelse(padj <=0.01, gene.id, NA))
ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.01), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC(Brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
pp5 = ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.01), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC(Brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
plot_grid(AB, CD, PP5, ncol = 1)
AB = plot_grid( title, z, ncol=1, rel_heights = c(.1, 1))
plot_grid(AB, CD, PP5, ncol = 1)
title <- ggdraw() + draw_label("Dispersion and Variance in DEx Genes \n (Brain over Embryo)", fontface='bold')
z = plot_grid(pp1, pp2, labels=c("A","B"))
AB = plot_grid( title, z, ncol=1, rel_heights = c(.1, 1))
title <- ggdraw() + draw_label("Sample Clustering and Top Discriminating Genes", fontface='bold')
z = plot_grid(pp3, pp4, labels=c("C","D"))
CD = plot_grid( title, z, ncol=1, rel_heights = c(.1, 1))
plot_grid(AB, CD, PP5, ncol = 1)
plot_grid(AB, CD, pp5, ncol = 1)
plot_grid(AB, CD)
plot_grid( title, z, ncol=1, rel_heights = c(.1, 1))
title <- ggdraw() + draw_label("Dispersion and Variance in DEx Genes \n (Brain over Embryo)", fontface='bold')
z1 = plot_grid(pp1, pp2, labels=c("A","B"))
AB = plot_grid( title, z1, ncol=1, rel_heights = c(.1, 1))
title <- ggdraw() + draw_label("Sample Clustering and Top Discriminating Genes", fontface='bold')
z2 = plot_grid(pp3, pp4, labels=c("C","D"))
CD = plot_grid( title, z2, ncol=1, rel_heights = c(.1, 1))
plot_grid(AB, CD)
CD
plot_grid(AB, CD)
row1 = plot_grid(AB, CD)
plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,1.2))
ggsave("prob2_deseqresults.pdf",h=15, w=8)
Q
ggsave("prob2_deseqresults.pdf",h=20, w=10)
Q
row1 = plot_grid(AB, CD)
plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,1.2))
row1 = plot_grid(AB, CD)
# expand the plot window a lot
row1 = plot_grid(AB, CD)
plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,1.2))
figure = plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,1.2))
# expand the plot window a lot
row1 = plot_grid(AB, CD)
figure = plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,1.2))
ggsave(figure, "prob2_deseqresults.pdf",h=20, w=10)
?ggsave()
ggsave(plot = figure, "prob2_deseqresults.pdf",h=20, w=10)
# plot
title = ggdraw() + draw_label("Dispersion and Variance in DEx Genes \n (Brain over Embryo)", fontface='bold')
z1 = plot_grid(pp1, pp2, labels=c("A","B"))
AB = plot_grid( title, z1, ncol=1, rel_heights = c(.1, 1))
title = ggdraw() + draw_label("Sample Clustering and Top Discriminating Genes", fontface='bold')
z2 = plot_grid(pp3, pp4, labels=c("C","D"))
CD = plot_grid( title, z2, ncol=1, rel_heights = c(.1, 1))
# expand the plot window a lot
row1 = plot_grid(AB, CD)
figure = plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,1.2))
ggsave(plot = figure, "prob2_deseqresults.pdf",h=20, w=10)
Q
dev.off()
View(fun)
ggsave(plot = figure, "prob2_deseqresults.pdf",h=30, w=15)
figure = plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,.75))
ggsave(plot = figure, "prob2_deseqresults.pdf",h=30, w=20)
ggsave(plot = figure, "prob2_deseqresults.pdf",h=25, w=20)
ggsave(plot = figure, "prob2_deseqresults.pdf",h=15, w=20)
# Volcano plot
lfc = data.frame(res) %>%
rownames_to_column(var = "gene.id") %>%
filter(!is.na(log2FoldChange)) %>%
mutate(sig.label = ifelse(padj <=0.001, gene.id, NA))
pp5 = ggplot(lfc, aes(log2FoldChange, -log10(padj))) +
geom_hline(yintercept = -log10(0.01), linetype = "dashed", color = "red") +
geom_vline(xintercept = 1, linetype = "dotted", color = "black", alpha = .5) +
geom_vline(xintercept = -1, linetype = "dotted", color = "black", alpha = .5) +
geom_point(size = .2, alpha = .4, color = "grey80") +
geom_point(size = .2,
data = subset(lfc, is.na(sig.label) == FALSE),
color = "black"
) +
labs( x="Log2FC(Brain/Embryo)", title = "Fly Brain vs Embryo Deseq2") +
ggrepel::geom_text_repel( aes( label = sig.label ),
vjust = 1.0,
box.padding = 0.5,
size = 2.0,
max.overlaps = 50, alpha = 0.7 ) +
theme_bw()
# plot
title = ggdraw() + draw_label("Dispersion and Variance in DEx Genes \n (Brain over Embryo)", fontface='bold')
z1 = plot_grid(pp1, pp2, labels=c("A","B"))
AB = plot_grid( title, z1, ncol=1, rel_heights = c(.1, 1))
title = ggdraw() + draw_label("Sample Clustering and Top Discriminating Genes", fontface='bold')
z2 = plot_grid(pp3, pp4, labels=c("C","D"))
CD = plot_grid( title, z2, ncol=1, rel_heights = c(.1, 1))
# expand the plot window a lot
row1 = plot_grid(AB, CD)
figure = plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,.75))
ggsave(plot = figure, "prob2_deseqresults.pdf",h=8, w=16)
figure = plot_grid(row1, pp5, nrow = 2, rel_heights = c(1,.75), labels =c("", "E"))
ggsave(plot = figure, "prob2_deseqresults.pdf",h=8, w=16)
# expand the plot window a lot
row1 = plot_grid(AB, CD)
row2 = plot_grid(NULL, pp5, NULL, nrow = 1, labels =c("", "E", ""), rel_widths = c(.5,1,.5))
figure=plot_grid(row1, row2, ncol=1, rel_heights = c(1,.75))
ggsave(plot = figure, "prob2_deseqresults.pdf",h=8, w=16)
figure=plot_grid(row1, row2, ncol=1, rel_heights = c(1,1))
ggsave(plot = figure, "prob2_deseqresults.pdf",h=10, w=20)
