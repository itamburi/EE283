getwd()
data = read.delim("./vcf_filt_metrics.txt")
View(data)
?read.delim()
data = read.delim("./vcf_filt_metrics.txt", sep = "\t")
data = read.delim("./vcf_filt_metrics.txt", sep = "\t")
nameS(data)
names(data)
library(ggplot2)
ggplot(data, aes(Step, SNP_Count)) +
geom_bar(stat="identity")
ggplot(data, aes(Step, SNP_Count)) +
geom_bar(stat="identity") +
theme_bw()
data = read.delim("./vcf_filt_metrics.txt", sep = "\t")
datatStep = factor(data$Step, levels =c("Initial VCF", "After Filter 1", "After Filter 2"))
ggplot(data, aes(Step, SNP_Count)) +
geom_bar(stat="identity") +
theme_bw()
data = read.delim("./vcf_filt_metrics.txt", sep = "\t")
data$Step = factor(data$Step, levels =c("Initial VCF", "After Filter 1", "After Filter 2"))
ggplot(data, aes(Step, SNP_Count)) +
geom_bar(stat="identity") +
theme_bw()
names(data)
p1=ggplot(data, aes(Step, SNP_Count)) +
geom_bar(stat="identity") +
theme_bw()
p2=ggplot(data, aes(Step, Mean_DP)) +
geom_bar(stat="identity") +
theme_bw()
p3=ggplot(data, aes(Step, Mean_QUAL)) +
geom_bar(stat="identity") +
theme_bw()
p4=ggplot(data, aes(Step, TiTv_Ratio)) +
geom_bar(stat="identity") +
theme_bw()
plot_grid(p1,p2,p3,p4, nrow=2)
library(cowplot)
plot_grid(p1,p2,p3,p4, nrow=2)
p1=ggplot(data, aes(Step, SNP_Count)) +
geom_bar(stat="identity") +
labs(x="") +
theme_bw()
p2=ggplot(data, aes(Step, Mean_DP)) +
geom_bar(stat="identity") +
labs(x="") +
theme_bw()
p3=ggplot(data, aes(Step, Mean_QUAL)) +
geom_bar(stat="identity") +
labs(x="") +
theme_bw()
p4=ggplot(data, aes(Step, TiTv_Ratio)) +
geom_bar(stat="identity") +
labs(x="") +
theme_bw()
plot_grid(p1,p2,p3,p4, nrow=2)
library(ggplot2)
library(cowplot)
data = read.delim("./vcf_filt_metrics.txt", sep = "\t")
data$Step = factor(data$Step, levels =c("Initial VCF", "After Filter 1", "After Filter 2","After Filter 3"))
p1=ggplot(data, aes(Step, SNP_Count)) +
geom_bar(stat="identity") +
labs(x="") +
theme_bw()
p2=ggplot(data, aes(Step, Mean_DP)) +
geom_bar(stat="identity") +
labs(x="") +
theme_bw()
p3=ggplot(data, aes(Step, Mean_QUAL)) +
geom_bar(stat="identity") +
labs(x="") +
theme_bw()
p4=ggplot(data, aes(Step, TiTv_Ratio)) +
geom_bar(stat="identity") +
labs(x="") +
theme_bw()
plot_grid(p1,p2,p3,p4, nrow=2)
ggsave("")
ggsave("snps after 3 filtering steps.png",h=6,w=6)
ggsave("snps after 3 filtering steps.png",h=6,w=8)
library(ggplot2)
library(cowplot)
data = read.delim("./X_1Mb_snps.012", sep = "\t")
View(data)
data=t(data)
geno <- as.matrix(read.table("./X_1Mb_snps.012", header=FALSE))
View(geno)
data = read.delim("./X_1Mb_snps.012", sep = "\t")
View(data)
geno <- as.matrix(read.table("./X_1Mb_snps.012", header=FALSE))
View(geno)
data = read.delim("./X_1Mb_snps.012", sep = "\t", header=FALSE)
View(data)
pos = read.delim("./X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
View(pos)
rm(data)
rm(geno)
gen = read.delim("./X_1Mb_snps.012", sep = "\t", header=FALSE)
pos = read.delim("./X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
View(gen)
View(pos)
positions <- scan("X_1Mb_snps.012.pos")
positions <- scan("./X_1Mb_snps.012.pos")
gen = gen[,-1]
gen = t(gen[,-1])
pos = read.delim("./X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
View(gen)
View(pos)
gen = read.delim("./X_1Mb_snps.012", sep = "\t", header=FALSE)
gen = read.delim("./X_1Mb_snps.012", sep = "\t", header=FALSE)
gen = t(gen[,-1])
pos = read.delim("./X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
View(pos)
gen = read.delim("./X_1Mb_snps.012", sep = "\t", header=FALSE)
gen = t(gen[,-1])
pos = read.delim("./X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
geno_colors <- matrix("white", nrow=nrow(gen), ncol=ncol(gen))
geno_colors[gen == 0] <- "green"   # Ref/Ref
geno_colors[gen == 1] <- "yellow"  # Ref/Alt
geno_colors[gen == 2] <- "red"     # Alt/Alt
# Plot using image
image(t(gen[nrow(geno):1,]), col=c("green", "yellow", "red"),
breaks=c(-0.5, 0.5, 1.5, 2.5), axes=FALSE, main="Genotype Matrix for 1Mb of X Chromosome")
# Plot using image
image(t(gen[nrow(gen):1,]), col=c("green", "yellow", "red"),
breaks=c(-0.5, 0.5, 1.5, 2.5), axes=FALSE, main="Genotype Matrix for 1Mb of X Chromosome")
rownames(gen) = pos$V2
View(gen)
rownames(gen) = pos$V2
names(gen) = c("geneotype1","geneotype2","geneotype3","geneotype4")
gen = read.delim("./X_1Mb_snps.012", sep = "\t", header=FALSE)
gen = t(gen[,-1])
pos = read.delim("./X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
rownames(gen) = pos$V2
names(gen) = c("geneotype1","geneotype2","geneotype3","geneotype4")
names(gen)
gen = read.delim("./X_1Mb_snps.012", sep = "\t", header=FALSE)
gen = t(gen[,-1])
pos = read.delim("./X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
rownames(gen) = pos$V2
View(gen)
gen = read.delim("./X_1Mb_snps.012", sep = "\t", header=FALSE)
gen = as.data.frame(t(gen[,-1]))
pos = read.delim("./X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
rownames(gen) = pos$V2
names(gen) = c("geneotype1","geneotype2","geneotype3","geneotype4")
pheatmap(gen)
library(pheatmap)
pheatmap(gen)
pheatmap(
gen,
cluster_rows = FALSE, cluster_cols = FALSE
)
color_palette <- c("green", "yellow", "red")
breaks <- c(-0.5, 0.5, 1.5, 2.5)
pheatmap(
gen,
cluster_rows = FALSE, cluster_cols = FALSE,
color = color_palette, breaks = breaks
)
pheatmap(
gen,
cluster_rows = FALSE, cluster_cols = FALSE,
fontsize_row = 6,
color = color_palette, breaks = breaks
)
pheatmap(
gen,
cluster_rows = FALSE, cluster_cols = FALSE,
fontsize_row = 5,
color = color_palette, breaks = breaks
)
pheatmap(
gen,
cluster_rows = FALSE, cluster_cols = FALSE,
fontsize_row = 4,
color = color_palette, breaks = breaks
)
pheatmap(
gen,
main="Biallelic distribution across first 1MB of Chrx\n Green = ref/ref\n Yellow = ref/alt\n Red=alt/alt"
cluster_rows = FALSE, cluster_cols = FALSE,
pheatmap(
gen,
main="Biallelic distribution across first 1MB of Chrx\n Green = ref/ref\n Yellow = ref/alt\n Red=alt/alt",
cluster_rows = FALSE, cluster_cols = FALSE,
fontsize_row = 4,
color = color_palette, breaks = breaks
)
library(grid)
ggsave("genotype_heatmap.png", plot = grid::grid.grab(), width = 8, height = 12)
gen = read.delim("../X_1Mb_snps.012", sep = "\t", header=FALSE)
library(ggplot2)
library(cowplot)
library(pheatmap)
getwd()
gen = read.delim("X_1Mb_snps.012", sep = "\t", header=FALSE)
gen = as.data.frame(t(gen[,-1]))
pos = read.delim("X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
rownames(gen) = pos$V2
names(gen) = c("geneotype1","geneotype2","geneotype3","geneotype4")
View(gen)
gen$sum = gen$geneotype1 + gen$geneotype2 + gen$geneotype3 + gen$geneotype4
View(gen)
View(gen)
filt = gen %>%
filter(!if_any(everything(), ~ . == 1))
# Prob #3 - only strains where two are 0/0 and other two are 1/1; snp at frequency of 50%
library(tidyverse)
filt = gen %>%
filter(!if_any(everything(), ~ . == 1))
View(filt)
gen = read.delim("X_1Mb_snps.012", sep = "\t", header=FALSE)
gen = as.data.frame(t(gen[,-1]))
pos = read.delim("X_1Mb_snps.012.pos", sep = "\t", header=FALSE)
rownames(gen) = pos$V2
names(gen) = c("geneotype1","geneotype2","geneotype3","geneotype4")
filt = gen %>%
filter(!if_any(everything(), ~ . == 1))
filt = gen %>%
filter(!if_any(everything(), ~ . == 1)) %>%
mutate(sum = genotype1+genotype2+genotype3+genotype4)
filt = gen %>%
filter(!if_any(everything(), ~ . == 1))
filt = gen %>%
filter(!if_any(everything(), ~ . == 1)) %>%
mutate(sum = geneotype1+geneotype2+geneotype3+geneotype4)
filt = gen %>%
filter(!if_any(everything(), ~ . == 1)) %>%
mutate(sum = geneotype1+geneotype2+geneotype3+geneotype4) %>%
filter(sum==4)
color_palette <- c("green", "yellow", "red")
breaks <- c(-0.5, 0.5, 1.5, 2.5)
pheatmap(
filt,
main="Biallelic distribution across first 1MB of Chrx\n Green = ref/ref\n Yellow = ref/alt\n Red = alt/alt",
cluster_rows = FALSE, cluster_cols = FALSE,
fontsize_row = 4,
color = color_palette, breaks = breaks
)
pheatmap(
filt,
main="SNPs with 50% freq isogenicity in chrX\n Green = ref/ref\n Yellow = ref/alt\n Red = alt/alt",
cluster_rows = FALSE, cluster_cols = FALSE,
fontsize_row = 4,
color = color_palette, breaks = breaks
)
filt = gen %>%
filter(!if_any(everything(), ~ . == 1)) %>%
mutate(sum = geneotype1+geneotype2+geneotype3+geneotype4) %>%
filter(sum==4) %>%
mutate(sum = NULL)
pheatmap(
filt,
main="SNPs with 50% freq isogenicity in chrX\n Green = ref/ref\n Yellow = ref/alt\n Red = alt/alt",
cluster_rows = FALSE, cluster_cols = FALSE,
fontsize_row = 4,
color = color_palette, breaks = breaks
)
ggsave("genotype_heatmap_freq50.png", plot = grid::grid.grab(), width = 6, height = 6)
